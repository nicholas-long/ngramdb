#!/bin/bash

# overwrite main readme file
# for now while this is not running in a container, this will work
set -o pipefail
READMEFILE="$(pwd)/README.md"
echo "writing readme file $READMEFILE" >/dev/stderr
cd $(dirname $0)

function generate_readme {
  cat header.md 
  echo
  echo '```bash'
  ngram --help 
  echo '```'
  echo
  for subcommand in $( ls "../20240704164832-ae846f0d186e581bb7aa/subcommands" | grep -v 'find-executable'); do
    echo "processing $subcommand" >/dev/stderr
    # ignore find-executable because it does not work with --help
    echo "## subcommand: $subcommand"
    echo ""
    awk '/^##* / { gsub(/^##* /, ""); print "-", $0 }' "../20240704164832-ae846f0d186e581bb7aa/subcommands/$subcommand"
    echo ""
    if grep '.--help' "../20240704164832-ae846f0d186e581bb7aa/subcommands/$subcommand" | cut -d : -f 1 | awk -F / '{print $NF}' | sort -u >/dev/null; then
      echo '```bash'
      echo ngram "$subcommand" --help
      ngram "$subcommand" --help 2>&1
      echo '```'
    fi
  done
  echo
  echo '# Active Data Pipelines in the System'
  echo
  cat ../20240710043728-86ad27b18da4fa187615/graph.md
  echo
  echo '# Test Run Output'
  echo
  echo '```'
  cat ../20240705000124-9769d8256b20e049b259/stdout.log
  echo '```'
  echo
  cat footer.md
  cat ../../LICENSE
}

generate_readme | ngram replace "$READMEFILE"

wc -l "$READMEFILE"

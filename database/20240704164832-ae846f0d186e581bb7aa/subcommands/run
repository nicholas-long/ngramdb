#!/bin/bash

if [ "$1" == "--until-stable" ]; then
  while [ 1 ]; do
    echo Looping $(date)
    "$ngram_prog" run --single
    if [ "$?" != "0" ]; then
      exit 0
    fi
  done
elif [ -z "$1" ]; then # base case - no parameter given, run
  "$ngram_prog" run --until-stable
else # run single
  echo "running single stage at $(date)" >/dev/stderr
fi

didntrunanything=1

# dumb simple implementation: run everything and let the checksum optimization deal with problems
for id in $( "$ngram_prog" find-executable database -type f -name run | awk -F / 'NF == 3 { print $2 }' ); do
  "$ngram_prog" run-single "$id"
  if [ "$?" = "0" ]; then
    didntrunanything=0
  fi
done

# TODO: run all things marked with tags that specify rerunning often, like "live" or something
# can run everyting at first? after all, there is the optimization
#runnableIds=$(mktemp)

# TODO: tsort dependencies

# TODO: run all things modified initially 
# TODO: find everything that's modified now
# TODO: attempt to run it
    # at each stage, mark things as run. exclude anything run initially from the first run. 
    # find the dependencies of each modified thing as the next set to run. run tsort on dependencies.

#rm "$runnableIds"

exit $didntrunanything

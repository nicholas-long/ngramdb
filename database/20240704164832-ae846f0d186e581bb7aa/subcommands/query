#!/bin/bash

workingset=$(mktemp)
if [ -z "$workingset" ]; then exit 1; fi
ls database > $workingset
if [ -z "$VERBOSE" ]; then VERBOSE=0; fi
while [[ $# -gt 0 ]]; do
  case $1 in
    -v)
      export VERBOSE=1
      ;;
    --human) # TODO: print results in human format with titles
      human=1
      shift
      "$ngram_prog" query "$@" | awk '
      { 
        command = "head -n 1 database/" $1 "/README.md"
        command | getline title
        gsub(/^#* /, "", title)
        print $0, title
        close(command)
      }
      '
      exit 0
      ;;
    @*) # search by tag with `ngram query @tag`
      export tag="$1"
      if [ "$VERBOSE" != 0 ]; then
        echo "looking for $tag" >/dev/stderr
      fi
      # TODO: could use an index
      awk '
        BEGIN { tag = ENVIRON["tag"]; gsub(/@/,"",tag) }
        $0 == tag { print FILENAME | "cut -d / -f 2" }
      ' $("$ngram_prog" tagfiles) | grep -f "$workingset" | "$ngram_prog" replace "$workingset"
      ;;
    refs)
      cat "$workingset" | xargs -n 1 "$ngram_prog" refs | sort -u | "$ngram_prog" replace "$workingset"
      ;;
    refsto)
      cat "$workingset" | xargs -n 1 "$ngram_prog" findrefsto | sort -u | "$ngram_prog" replace "$workingset"
      ;;
    id)
      shift
      echo "$1" > "$workingset"
      ;;
    not)
      shift
      if [[ "$1" =~ @.* ]]; then
        grep -vf <($ngram_prog query $1) "$workingset" | "$ngram_prog" replace "$workingset"
      else
        grep -vf "$1" "$workingset" | "$ngram_prog" replace "$workingset"
      fi
      ;;
    union)
      shift
      if [[ "$1" =~ @.* ]]; then
        cat <($ngram_prog query $1) "$workingset" | sort -u | "$ngram_prog" replace "$workingset"
      else
        cat "$workingset" "$1" | sort -u | "$ngram_prog" replace "$workingset"
      fi
      ;;
    *) # filename parameter or subquery implemented with bash filename redirection
      grep -f "$1" "$workingset" | "$ngram_prog" replace "$workingset"
      ;;
  esac
  shift
done
cat "$workingset"
rm "$workingset"
